service: favi

provider:
  name: aws
  runtime: nodejs6.10
  profile: tremorlab
  apiKeys:
    - favi-web-key
    - favi-seed-key
  usagePlan:
    quota:
      limit: 1000
      period: DAY
    throttle:
      rateLimit: 5
      burstLimit: 10
  environment:
    DEBUG: "*"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
        - dynamodb:BatchWriteItem
        - dynamodb:BatchGetItem
      Resource: arn:aws:dynamodb:*:*
    - Effect: Allow
      Action:
        - s3:*
      Resource: arn:aws:s3:::favi-*/*
    - Effect: "Allow"
      Action:
        - sns:*
      Resource: "*"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource: "*"

plugins:
  - serverless-plugin-custom-domain

custom:
  domain: "favi-api.andrhamm.com"

package:
  exclude:
    - app
    - seed.rb
    - '*.csv*'
    - ruby
    - vendor
    - .bundle 
    - '*.rb'
    - 'Gemfile*'

functions:
  readFave:
    description: HTTP-event function to lookup favicon data by hostname
    handler: handlers/handler.readFave
    events:
      - http:
          path: /faves
          method: get
          private: true
          request:
            parameters:
              querystrings:
                hostname: true
  createFave:
    description: HTTP-event function to queue a hostname for favicon scraping
    handler: handlers/handler.createFave
    events:
      - http:
          path: /faves
          method: post
          private: true
      - http:
          path: /faves
          method: options
          private: false
  createFaveBatch:
    description: Stream-event function to queue bulk hostnames for favicon scraping
    handler: handlers/seed.createFaveBatch
    events:
      - sns: FaveSeeds
  seedFaves:
    description: HTTP-event function to queue a batch of hostnames for favicon scraping
    handler: handlers/handler.seedFaves
    timeout: 60
    environment:
      FAVI_SEED_KEY: ${file(env.yml):FAVI_SEED_KEY}
      SNS_TOPIC_ARN: { "Ref": "SNSTopicFaveSeeds" }
    events:
      - http:
          path: /seed
          method: post
          private: true
      - http:
          path: /seed
          method: options
          private: false
  streamFaves:
    description: HTTP-event function to queue a request to stream all faves to websocket
    handler: handlers/handler.streamFaves
    timeout: 60
    events:
      - http:
          path: /faves/stream
          method: post
          private: true
      - http:
          path: /faves/stream
          method: options
          private: false
  scrapeDynamoToSns:
    description: Stream-event function to send dynamodb stream events to SNS
    handler: handlers/handler.scrapeDynamoToSns
    environment:
      SNS_TOPIC_ARN: { "Ref": "SNSTopicFaveScrapeJobs" }
    events:
       - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - FavesDynamoDbTable
              - StreamArn
          batchSize: 25
  scrapeFavicon:
    description: Stream-event function to scrape favicons in a headlesss browser
    handler: handlers/scrape.scrapeFavicon
    timeout: 180
    events:
      - sns: FaveScrapeJobs
  cacheFavicon:
    description: Stream-event function to save copies of favicon images to S3
    handler: handlers/cache.cacheFavicon
    events:
       - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - FavesDynamoDbTable
              - StreamArn
          batchSize: 25
  notifyPusher:
    description: Stream-event function to push dynamodb events to websockets
    handler: handlers/notify.notifyPusher
    environment:
      PUSHER_APP_ID: ${file(env.yml):PUSHER_APP_ID}
      PUSHER_KEY: ${file(env.yml):PUSHER_KEY}
      PUSHER_SECRET: ${file(env.yml):PUSHER_SECRET}
    events:
       - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - FavesDynamoDbTable
              - StreamArn
          batchSize: 100
  notifyPusherAll:
    description: Function to push all faves to websockets
    handler: handlers/notify.notifyPusherAll
    environment:
      PUSHER_APP_ID: ${file(env.yml):PUSHER_APP_ID}
      PUSHER_KEY: ${file(env.yml):PUSHER_KEY}
      PUSHER_SECRET: ${file(env.yml):PUSHER_SECRET}

resources:
  Resources:
    FavesDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: FaveRecords
        AttributeDefinitions:
          - AttributeName: hostname
            AttributeType: "S"
        KeySchema:
          - AttributeName: hostname
            KeyType: HASH
        StreamSpecification:
            StreamViewType: NEW_AND_OLD_IMAGES
        ProvisionedThroughput:
          ReadCapacityUnits: 25
          WriteCapacityUnits: 25
    S3BucketFaviApp:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: favi-app
    S3BucketFaviCache:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: favi-cache
    SNSTopicFaveSeeds:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: FaveSeeds
    SNSTopicFaveScrapeJobs:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: FaveScrapeJobs
    # KinesisTestMap:
    #   Type: AWS::Lambda::EventSourceMapping
    #   DependsOn : 
    #     - "CreateFaveBatchLambdaFunction"
    #     - "IamPolicyLambdaExecution"
    #   Properties:
    #     BatchSize: 10
    #     EventSourceArn:
    #       Fn::GetAtt:
    #         - "KinesisStreamFaveSeeds"
    #         - "Arn"
    #     FunctionName:
    #       Fn::GetAtt:
    #         - "CreateFaveBatchLambdaFunction"
    #         - "Arn"
    #     StartingPosition: "TRIM_HORIZON"
    # CloudFrontDistributionFaviApp:
    #   Type: AWS::CloudFront::Distribution
    #   Properties:
    #     DistributionConfig:
    #       Aliases:
    #         - favi.andrhamm.com
    #       DefaultRootObject: index.html
    #       Origins:
    #         - DomainName: favi.andrhamm.com
    #           Id: favi
    #           S3OriginConfig:
